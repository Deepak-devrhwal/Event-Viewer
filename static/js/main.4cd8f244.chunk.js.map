{"version":3,"sources":["components/header/header.module.css","components/dataTable/item/item.module.css","containers/HomePage/HomePage.module.css","components/menuNav/menuNav.module.css","assets/icon/close.svg","components/dataTable/dataTable.module.css","components/header/header.js","components/menuNav/menuNav.js","components/dataTable/item/item.js","components/dataTable/dataTable.js","containers/HomePage/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","header","props","className","styles","support_container","container","title","tab_container","tabs","map","item","tab","key","index","style","selected","borderBottomColor","tab_title","onClick","onTab","name","close","src","closeIcon","alt","onClose","menuNav","data","onMenu","data_timestamp","timestamp","data_raw","raw","dataTable","HomePage","state","selectedTabs","selectedTab","onMenuHandler","root","isPresent","forEach","element","push","setState","onTabHandler","onCloseTabHandler","tabIndex","i","length","splice","this","main_body","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4cd8f244.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"support_container\":\"header_support_container__MyRU-\",\"container\":\"header_container__3-yw0\",\"title\":\"header_title__1z6xA\",\"tab_container\":\"header_tab_container__3zJu6\",\"tab\":\"header_tab__3mH8C\",\"tab_title\":\"header_tab_title__2I9GK\",\"close\":\"header_close__3W8Kz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"item_container__18BId\",\"data_timestamp\":\"item_data_timestamp__2-9QV\",\"data_raw\":\"item_data_raw__ZV1-j\",\"header\":\"item_header__3X3Hp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_body\":\"HomePage_main_body__4iaLk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"menuNav_container__ZYmhJ\",\"item\":\"menuNav_item__1w8fB\"};","module.exports = __webpack_public_path__ + \"static/media/close.ee331d11.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"dataTable_container__3UExJ\"};","import React from 'react';\nimport styles from './header.module.css';\nimport closeIcon from '../../assets/icon/close.svg';\n\nconst header = (props) => {\n    return (\n        <div className={styles.support_container}>\n            <div className={styles.container}>\n                <div className={styles.title}>Event Viewer</div>\n                <div className={styles.tab_container}>\n                    {\n                        props.tabs.map(item => {\n                            return (\n                                <div className={styles.tab} key={item.index} style={item.selected ? { borderBottomColor: \"#ffffff\" } : null}>\n                                    <div className={styles.tab_title} onClick={() => props.onTab(item.index)}>{item.name}</div>\n                                    <img className={styles.close} src={closeIcon} alt=\"close\" onClick={() => props.onClose(item.index)} />\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default header;","import React from 'react';\nimport styles from './menuNav.module.css';\n\nconst menuNav = (props) => {\n    return(\n        <div className={styles.container}>\n            {\n                props.data.map((item) => {\n                    return(\n                        <div key={item.index} className={styles.item} onClick={() => props.onMenu(item.index, item.name)}>{item.name}</div>\n                    )\n                })\n            }\n        </div>\n    );\n}\n\nexport default menuNav;","import React from 'react';\nimport styles from './item.module.css';\n\nconst item = (props) => {\n    return(\n        <div className={styles.container}>\n            <div className={styles.data_timestamp}>\n                <div className={styles.header}>timestamp</div>\n                <div>{props.item.timestamp}</div>\n            </div>\n            <div className={styles.data_raw}>\n                <div className={styles.header}>_raw</div>\n                <div>{props.item.raw}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default item;","import React from 'react';\nimport styles from './dataTable.module.css';\nimport Item from './item/item';\n\nconst dataTable = (props) => {\n    return (\n        <div className={styles.container}>\n            {\n                props.data\n                    ?\n                    props.data.data.map((item, index) => {\n                        return (\n                            <Item\n                                key={index}\n                                item={item}\n                            />\n                        )\n                    })\n                    :\n                    null\n            }\n        </div>\n    );\n}\n\nexport default dataTable;","import React, { Component } from 'react';\nimport styles from './HomePage.module.css';\nimport Header from '../../components/header/header';\nimport MenuNav from '../../components/menuNav/menuNav';\nimport DataTable from '../../components/dataTable/dataTable';\nimport data from '../../assets/data/generated.json';\n\nclass HomePage extends Component {\n    state = {\n        data: [],\n        selectedTabs: [],\n        selectedTab: null\n    }\n\n    componentWillMount() {\n        this.setState({\n            data: data\n        });\n    }\n\n    onMenuHandler = (index, name) => {\n        let root = this;\n        let selectedTabs = [...this.state.selectedTabs];\n        let data = {\n            index,\n            name,\n            selected: true\n        }\n        let isPresent = false;\n\n        selectedTabs.forEach(element => {\n            if (element.index === index) {\n                isPresent = true;\n                return;\n            }\n        });\n\n        if (!isPresent) {\n            selectedTabs.push(data);\n        }\n\n        this.setState({\n            selectedTabs\n        }, () => {\n            root.onTabHandler(index);\n        });\n    }\n\n    onTabHandler = index => {\n        let selectedTab = this.state.selectedTab;\n        let selectedTabs = [...this.state.selectedTabs];\n\n        selectedTabs.forEach(element => {\n            if (element.index === index) {\n                element.selected = true;\n                selectedTab = index;\n            }\n            else {\n                element.selected = false;\n            }\n        });\n\n        this.setState({\n            selectedTab,\n            selectedTabs\n        });\n    }\n\n    onCloseTabHandler = index => {\n        let tabIndex = -1;\n        let selectedTab = this.state.selectedTab;\n        let selectedTabs = [...this.state.selectedTabs];\n\n        selectedTabs.forEach((element, i) => {\n            if (element.index === index) {\n                tabIndex = i;\n            }\n        });\n\n        if (selectedTabs.length === 1) {\n            selectedTab = null;\n        }\n        else if (selectedTab === index) {\n            if(tabIndex === 0){\n                selectedTab = selectedTabs[tabIndex+1].index;\n                selectedTabs[tabIndex+1].selected = true;\n            }\n            else{\n                selectedTab = selectedTabs[tabIndex-1].index;\n                selectedTabs[tabIndex-1].selected = true;\n            }\n        }\n\n        selectedTabs.splice(tabIndex, 1);\n\n        this.setState({\n            selectedTab,\n            selectedTabs\n        });\n    }\n\n    render() {\n        return (\n            <div className={styles.container}>\n                <Header\n                    tabs={this.state.selectedTabs}\n                    onTab={this.onTabHandler}\n                    onClose={this.onCloseTabHandler}\n                />\n\n                <div className={styles.main_body}>\n                    <MenuNav\n                        data={this.state.data}\n                        onMenu={(index, name) => this.onMenuHandler(index, name)}\n                    />\n                    <DataTable \n                        data={this.state.data[this.state.selectedTab]}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default HomePage;","import React from \"react\";\nimport \"./App.css\";\nimport HomePage from \"./containers/HomePage/HomePage\";\n\nfunction App() {\n  return (\n    <div className='App'>\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}